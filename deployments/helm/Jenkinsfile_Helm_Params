pipeline{
    agent any
    options {
        buildDiscarder(logRotator(numToKeepStr: "15"))
        disableConcurrentBuilds()
        timeout(time: 5, unit: "MINUTES")
        timestamps()
    }
    parameters{
        string(name: "CHART_NAME", defaultValue: "", description: "Name of the helm chart that you want to install")
        string(name: "CHART_VERSION", defaultValue: "", description: "Versions are expected to follow Semantic Versioning 0.1.0 (https://semver.org/)")
    }
    stages{
        stage("Helm: Deploy K8s"){
            steps{
                sh "helm repo update"
                sh "helm search repo ${params.CHART_NAME} --version ${params.CHART_VERSION}"
                echo "Deploying helm chart version: ${params.CHART_VERSION}"
                sleep 5
            }
            post{
                always{
                    echo "========always========"
                }
                success{
                    echo "========A executed successfully========"
                }
                failure{
                    echo "========A execution failed========"
                }
            }
        }
    }
    post{
        always{
            echo "========always========"
            script{
                currentBuild.displayName = "#${BUILD_NUMBER}-${params.CHART_NAME}-${params.CHART_VERSION}"
            }
        }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}